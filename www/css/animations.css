/**
 * Custom animations
 */

/* Scale-In */
.scale-in {
    transform: scale(0.9);
    opacity: 0;
}
.scale-in.ng-enter,
.scale-in > .ng-enter {
    transition: all cubic-bezier(.1, .7, .1, 1) 400ms;
}
.scale-in.ng-enter-active,
.scale-in > .ng-enter-active {
    transform: scale(1);
    opacity: 1;
}
.scale-in.ng-leave,
.scale-in > .ng-leave {
    transition: all ease-in-out 250ms;
}
 
/* Shake */
.shake-item {
    animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
    transform: translate3d(0, 0, 0);
    backface-visibility: hidden;
    perspective: 1000px;
}

@keyframes shake {
    10%, 90% {
      transform: translate3d(-1px, 0, 0);
    }
    
    20%, 80% {
      transform: translate3d(2px, 0, 0);
    }
  
    30%, 50%, 70% {
      transform: translate3d(-4px, 0, 0);
    }
  
    40%, 60% {
      transform: translate3d(4px, 0, 0);
    }
}

/* Flip horizontally */
@keyframes flip50PxElementHorizontally {
    from {
        -webkit-transform: perspective(50px);
        transform: perspective(50px);
        width: 50px;
        opacity: .7
    }

    30% {
        -webkit-transform: perspective(50px) rotate3d(0,1,0,-10deg);
        transform: perspective(50px) rotate3d(0,1,0,-10deg);
        width: 50px;
        opacity: .85
    }

    to {
        -webkit-transform: perspective(50px) rotate3d(0,1,0,360deg);
        transform: perspective(50px) rotate3d(0,1,0,360deg);
        width: 50px;
        opacity: 1
    }
}

@keyframes flip22PxElementHorizontally {
    from {
        -webkit-transform: perspective(22px);
        transform: perspective(22px);
        width: 22px;
        opacity: .7
    }

    30% {
        -webkit-transform: perspective(22px) rotate3d(0,1,0,-10deg);
        transform: perspective(22px) rotate3d(0,1,0,-10deg);
        width: 22px;
        opacity: .85
    }

    to {
        -webkit-transform: perspective(22px) rotate3d(0,1,0,360deg);
        transform: perspective(22px) rotate3d(0,1,0,360deg);
        width: 22px;
        opacity: 1
    }
}

/* Expand */
@keyframes expandItemVertically {
    from {
        max-height: 165px;
    }

    30% {
        max-height: 100px;
    }

    100% {
        max-height: 1000px;
    }
}

/* Shrink */
@keyframes shrinkItemVertically {
    from {
        max-height: 500px;
    }

    to {
        max-height: 165px;
    }
}

/* Slide from bottom */
@keyframes slideFromTop {
    from {
        top: -1000px;
        opacity: 0;
    }

    70% {
        top: 150px;
        opacity: 0.45;
    }

    100% {
        top: 50px;
        opacity: 1;
    }
}